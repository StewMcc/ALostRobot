#if UNITY_IOS && ! UNITY_EDITOR
/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.11
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


using System;
using System.Runtime.InteropServices;

public class AkAudioSessionProperties : IDisposable {
  private IntPtr swigCPtr;
  protected bool swigCMemOwn;

  internal AkAudioSessionProperties(IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  internal static IntPtr getCPtr(AkAudioSessionProperties obj) {
    return (obj == null) ? IntPtr.Zero : obj.swigCPtr;
  }

  ~AkAudioSessionProperties() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr != IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          AkSoundEnginePINVOKE.CSharp_delete_AkAudioSessionProperties(swigCPtr);
        }
        swigCPtr = IntPtr.Zero;
      }
      GC.SuppressFinalize(this);
    }
  }

  public AkAudioSessionCategory eCategory {
    set {
      AkSoundEnginePINVOKE.CSharp_AkAudioSessionProperties_eCategory_set(swigCPtr, (int)value);

    } 
    get {
      AkAudioSessionCategory ret = (AkAudioSessionCategory)AkSoundEnginePINVOKE.CSharp_AkAudioSessionProperties_eCategory_get(swigCPtr);

      return ret;
    } 
  }

  public AkAudioSessionCategoryOptions eCategoryOptions {
    set {
      AkSoundEnginePINVOKE.CSharp_AkAudioSessionProperties_eCategoryOptions_set(swigCPtr, (int)value);

    } 
    get {
      AkAudioSessionCategoryOptions ret = (AkAudioSessionCategoryOptions)AkSoundEnginePINVOKE.CSharp_AkAudioSessionProperties_eCategoryOptions_get(swigCPtr);

      return ret;
    } 
  }

  public AkAudioSessionMode eMode {
    set {
      AkSoundEnginePINVOKE.CSharp_AkAudioSessionProperties_eMode_set(swigCPtr, (int)value);

    } 
    get {
      AkAudioSessionMode ret = (AkAudioSessionMode)AkSoundEnginePINVOKE.CSharp_AkAudioSessionProperties_eMode_get(swigCPtr);

      return ret;
    } 
  }

  public AkAudioSessionSetActiveOptions eSetActivateOptions {
    set {
      AkSoundEnginePINVOKE.CSharp_AkAudioSessionProperties_eSetActivateOptions_set(swigCPtr, (int)value);

    } 
    get {
      AkAudioSessionSetActiveOptions ret = (AkAudioSessionSetActiveOptions)AkSoundEnginePINVOKE.CSharp_AkAudioSessionProperties_eSetActivateOptions_get(swigCPtr);

      return ret;
    } 
  }

  public AkAudioSessionProperties() : this(AkSoundEnginePINVOKE.CSharp_new_AkAudioSessionProperties(), true) {

  }

}
#endif // #if UNITY_IOS && ! UNITY_EDITOR